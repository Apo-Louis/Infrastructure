# création VPC et des éléments associés (subnet, NAT, route table, IGW)
module "vpc_and_subnets" {
  source               = "./modules/vpc_and_subnets"
  azs                  = var.azs
  vpc_name             = "${var.cluster_prefix}${var.vpc_name}"
  vpc_cidr             = var.vpc_cidr
  public_subnets_cidr  = var.public_subnets_cidr
  private_subnets_cidr = var.private_subnets_cidr
  tags                 = var.tags
  additional_public_subnet_tags = {
    "kubernetes.io/cluster/${var.cluster_prefix}${var.eks_cluster_name}" = "owned"
    "kubernetes.io/role/elb"                                             = "1"
  }
  additional_private_subnet_tags = {
    "kubernetes.io/cluster/${var.cluster_prefix}${var.eks_cluster_name}" = "owned"
    "kubernetes.io/role/internal-elb"                                    = "1"
  }
}

# création du cluster EKS
module "eks" {
  source                     = "./modules/eks"
  environment                = var.environment
  eks_cluster_name           = "${var.cluster_prefix}${var.eks_cluster_name}"
  k8s_version                = var.k8s_version
  eks_node_groups_subnet_ids = module.vpc_and_subnets.private_subnets
  control_plane_subnet_ids   = concat(module.vpc_and_subnets.public_subnets, module.vpc_and_subnets.private_subnets)
  tags                       = var.tags
  kubeconfig_path            = var.kubeconfig_path
  cluster_prefix             = var.cluster_prefix
}

# Configuration pour autoscaler
module "autoscaler" {
  source                = "./modules/autoscaler"
  eks_cluster_name      = "${var.cluster_prefix}${var.eks_cluster_name}"
  eks_oidc_provider_arn = module.eks.eks_oidc_provider_arn
  tags                  = var.tags
  depends_on            = [module.eks]
}

# Configuration pour Velero
module "velero" {
  source                = "./modules/velero"
  bucket_name_velero    = "${var.cluster_prefix}${var.bucket_name_velero}"
  eks_cluster_name      = "${var.cluster_prefix}${var.eks_cluster_name}"
  eks_oidc_provider_arn = module.eks.eks_oidc_provider_arn
  tags                  = var.tags
  depends_on            = [module.eks]
}

##################################
##### Création fichier Ansible
##################################
# création d'un fichier pour ansible contenant les infos du cluster
resource "local_file" "tf_ansible_vars_file" {
  filename             = var.ansible_vars_file_path
  directory_permission = 0666

  content = <<-DOC
  # Ansible vars_file containing variable values from Terraform.
  # Generated by Terraform cluster module.

  tf_region: ${var.region}
  # EKS
  tf_eks_cluster_name: ${module.eks.eks_cluster_name}
  tf_eks_cluster_id: ${module.eks.eks_cluster_id}
  tf_eks_cluster_endpoint: ${module.eks.eks_cluster_endpoint}
  tf_eks_cluster_version: ${module.eks.eks_cluster_version}
  tf_eks_kubeconfig_path: ${var.kubeconfig_path}
  tf_eks_oidc_provider_arn: ${module.eks.eks_oidc_provider_arn}
  # Velero
  tf_velero_iam_role_arn: ${module.velero.velero_iam_role_arn}
  tf_velero_iam_role_name: ${module.velero.velero_iam_role_name}
  tf_velero_s3_bucket_arn: ${module.velero.velero_s3_bucket_arn}
  tf_velero_s3_bucket_id: ${module.velero.velero_s3_bucket_id}
  # autoscaler
  tf_autoscaler_iam_role_arn: ${module.autoscaler.autoscaler_iam_role_arn}
  tf_autoscaler_iam_role_name: ${module.autoscaler.autoscaler_iam_role_name}
  DOC
}
